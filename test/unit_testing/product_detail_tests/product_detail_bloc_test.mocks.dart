// Mocks generated by Mockito 5.4.4 from annotations
// in ecommerce_app/test/unit_testing/product_detail_tests/product_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ecommerce_app/db/remote/firestore_db.dart' as _i2;
import 'package:ecommerce_app/model/product.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FireStoreDataBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireStoreDataBase extends _i1.Mock implements _i2.FireStoreDataBase {
  MockFireStoreDataBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Product>> getAllProducts() => (super.noSuchMethod(
        Invocation.method(
          #getAllProducts,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<List<_i4.Product>> getProductsByCatergory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCatergory,
          [category],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<dynamic> loadProductsToFireStore() => (super.noSuchMethod(
        Invocation.method(
          #loadProductsToFireStore,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<_i4.Product?> getProductById(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [productId],
        ),
        returnValue: _i3.Future<_i4.Product?>.value(),
      ) as _i3.Future<_i4.Product?>);

  @override
  _i3.Future<void> addToCart(
    String? productID,
    dynamic productQuantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [
            productID,
            productQuantity,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<(bool, dynamic)> checkProductStatus(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkProductStatus,
          [productId],
        ),
        returnValue: _i3.Future<(bool, dynamic)>.value((false, null)),
      ) as _i3.Future<(bool, dynamic)>);

  @override
  _i3.Future<List<_i4.Product>> loadCartProduct() => (super.noSuchMethod(
        Invocation.method(
          #loadCartProduct,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<List<_i4.Product>> removeProduct(String? productID) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeProduct,
          [productID],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<void> updateProductCartQuantity(
    String? productId,
    int? productQuantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProductCartQuantity,
          [
            productId,
            productQuantity,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Product>> updateProductQuantity(
    String? productId,
    int? productQuantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProductQuantity,
          [
            productId,
            productQuantity,
          ],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<void> updateStock(dynamic productId) => (super.noSuchMethod(
        Invocation.method(
          #updateStock,
          [productId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> getCartProductCount() => (super.noSuchMethod(
        Invocation.method(
          #getCartProductCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getProductQuantity(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #getProductQuantity,
          [productId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<dynamic>?> submitReview(
    Map<String, dynamic>? review,
    String? productId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitReview,
          [
            review,
            productId,
          ],
        ),
        returnValue: _i3.Future<List<dynamic>?>.value(),
      ) as _i3.Future<List<dynamic>?>);
}
